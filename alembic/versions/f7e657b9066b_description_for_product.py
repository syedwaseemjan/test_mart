"""description_for_product

Revision ID: f7e657b9066b
Revises: 9520e6e83743
Create Date: 2025-05-17 13:40:31.935182

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "f7e657b9066b"
down_revision: Union[str, None] = "9520e6e83743"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "inventory",
        "last_updated",
        existing_type=mysql.TIMESTAMP(),
        nullable=False,
        existing_server_default=sa.text("(now())"),
    )
    op.add_column("products", sa.Column("description", sa.String(length=2000), nullable=True))
    op.add_column(
        "products",
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
    )
    op.add_column(
        "products",
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
    )
    op.alter_column("sales", "product_id", existing_type=mysql.INTEGER(), nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("sales", "product_id", existing_type=mysql.INTEGER(), nullable=True)
    op.drop_column("products", "updated_at")
    op.drop_column("products", "created_at")
    op.drop_column("products", "description")
    op.alter_column(
        "inventory",
        "last_updated",
        existing_type=mysql.TIMESTAMP(),
        nullable=True,
        existing_server_default=sa.text("(now())"),
    )
    # ### end Alembic commands ###
